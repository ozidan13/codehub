const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function cleanUserNames() {
  try {
    console.log('๐ ุงูุจุญุซ ุนู ุงููุณุชุฎุฏููู ุงูุฐูู ูุญุชููู ุนูู "๐จ ADMIN -" ูู ุฃุณูุงุฆูู...');
    
    // ุงูุจุญุซ ุนู ุฌููุน ุงููุณุชุฎุฏููู ุงูุฐูู ูุญุชููู ุนูู ุงููุต ุงููุทููุจ ุญุฐูู
    const usersWithAdminText = await prisma.user.findMany({
      where: {
        name: {
          contains: '๐จ ADMIN -'
        }
      },
      select: {
        id: true,
        email: true,
        name: true
      }
    });
    
    console.log(`๐ ุชู ุงูุนุซูุฑ ุนูู ${usersWithAdminText.length} ูุณุชุฎุฏู ูุญุชูู ุนูู ุงููุต "๐จ ADMIN -"`);
    
    if (usersWithAdminText.length === 0) {
      console.log('โ ูุง ููุฌุฏ ูุณุชุฎุฏููู ูุญุชููู ุนูู ุงููุต ุงููุทููุจ ุญุฐูู');
      return;
    }
    
    // ุนุฑุถ ุงููุณุชุฎุฏููู ุงูุฐูู ุณูุชู ุชุญุฏูุซูู
    console.log('\n๐ฅ ุงููุณุชุฎุฏููู ุงูุฐูู ุณูุชู ุชูุธูู ุฃุณูุงุฆูู:');
    usersWithAdminText.forEach((user, index) => {
      const cleanName = user.name ? user.name.replace('๐จ ADMIN - ', '') : user.name;
      console.log(`${index + 1}. ุงูุงุณู ุงูุญุงูู: "${user.name}"`);
      console.log(`   ุงูุงุณู ุงูุฌุฏูุฏ: "${cleanName}"`);
      console.log(`   ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: ${user.email}`);
      console.log(`   ID: ${user.id}\n`);
    });
    
    console.log('๐ ุจุฏุก ุชูุธูู ุฃุณูุงุก ุงููุณุชุฎุฏููู...');
    
    let updatedCount = 0;
    
    // ุชุญุฏูุซ ูู ูุณุชุฎุฏู ุนูู ุญุฏุฉ
    for (const user of usersWithAdminText) {
      if (user.name) {
        const cleanName = user.name.replace('๐จ ADMIN - ', '');
        
        await prisma.user.update({
          where: {
            id: user.id
          },
          data: {
            name: cleanName
          }
        });
        
        updatedCount++;
        console.log(`โ ุชู ุชุญุฏูุซ: ${user.email} - ุงูุงุณู ุงูุฌุฏูุฏ: "${cleanName}"`);
      }
    }
    
    console.log(`\n๐ ุชู ุชูุธูู ุฃุณูุงุก ${updatedCount} ูุณุชุฎุฏู ุจูุฌุงุญ!`);
    
    // ุงูุชุญูู ูู ุงููุชูุฌุฉ
    const remainingUsersWithAdminText = await prisma.user.count({
      where: {
        name: {
          contains: '๐จ ADMIN -'
        }
      }
    });
    
    console.log('\n๐ ุงูุฅุญุตุงุฆูุงุช ุงูููุงุฆูุฉ:');
    console.log(`- ุนุฏุฏ ุงููุณุชุฎุฏููู ุงูุฐูู ูุง ุฒุงููุง ูุญุชููู ุนูู "๐จ ADMIN -": ${remainingUsersWithAdminText}`);
    
    if (remainingUsersWithAdminText === 0) {
      console.log('\n๐ ุชู ุชูุธูู ุฌููุน ุงูุฃุณูุงุก ุจูุฌุงุญ! ูู ูุนุฏ ููุงู ุฃู ูุณุชุฎุฏู ูุญุชูู ุนูู "๐จ ADMIN -" ูู ุงุณูู');
    }
    
  } catch (error) {
    console.error('โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชูุธูู ุฃุณูุงุก ุงููุณุชุฎุฏููู:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// ุชุดุบูู ุงูุฏุงูุฉ
cleanUserNames()
  .then(() => {
    console.log('\nโจ ุงูุชูุช ุนูููุฉ ุชูุธูู ุงูุฃุณูุงุก');
    process.exit(0);
  })
  .catch((error) => {
    console.error('โ ูุดู ูู ุชุดุบูู ุงูุณูุฑูุจุช:', error);
    process.exit(1);
  });